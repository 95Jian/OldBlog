{"remainingRequest":"D:\\finalProject3\\Blog\\blog-view\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??ref--5!D:\\finalProject3\\Blog\\blog-view\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\finalProject3\\Blog\\blog-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\finalProject3\\Blog\\blog-view\\src\\components\\comment\\CommentForm.vue?vue&type=template&id=2d45d093","dependencies":[{"path":"D:\\finalProject3\\Blog\\blog-view\\src\\components\\comment\\CommentForm.vue","mtime":1724679300481},{"path":"D:\\finalProject3\\Blog\\blog-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1724725039690},{"path":"D:\\finalProject3\\Blog\\blog-view\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1724724440611},{"path":"D:\\finalProject3\\Blog\\blog-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1724725039690},{"path":"D:\\finalProject3\\Blog\\blog-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1724724440346}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}